{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	// JavaScript
	"Import default module": {
		"scope": "javascript, typescript, javascriptreact",
		"prefix": "imp",
		"body": [
			"import $1 from '$2';"
		],
		"description": "Import default module"
	},
	"Import named module": {
		"scope": "javascript, typescript, javascriptreact",
		"prefix": "imd",
		"body": [
			"import { $1 } from '$2';"
		],
		"description": "Import named module"
	},
	"Destructure array": {
		"scope": "javascript, typescript, javascriptreact",
		"prefix": "dsa",
		"body": [
			"const [ $1 ] = '$2';"
		],
		"description": "Destructure array"
	},
	"Destructure object": {
		"scope": "javascript, typescript, javascriptreact",
		"prefix": "dsa",
		"body": [
			"const { $1 } = '$2';"
		],
		"description": "Destructure object"
	},

	// REACT
	"Import React": {
		"scope": "javascript, typescript, javascriptreact",
		"prefix": "imr",
		"body": [
			"import React from 'react';"
		],
		"description": "Import React"
	},
	"Import React and named modules": {
		"scope": "javascript, typescript, javascriptreact",
		"prefix": "imrc",
		"body": [
			"import React, { $1 } from 'react';"
		],
		"description": "Import React and named modules"
	},
	"Import and export index": {
		"scope": "javascript, typescript, javascriptreact",
		"prefix": "imi",
		"body": [
			"import $1 from './$1';",
			"export default $1;",
		],
		"description": "Import and export index"
	},
	"Return a JSX tag": {
		"scope": "javascript, typescript, javascriptreact",
		"prefix": "ret",
		"body": [
			"return (",
			"\t$1",
			");",
		],
		"description": "Return a JSX tag"
	},
	"Create a React component": {
		"scope": "javascript, typescript, javascriptreact",
		"prefix": "rcc",
		"body": [
			"import React from 'react';",
			"import { Container } from './$1.style.js';",
			"",
			"const $1 = () => {",
			"\treturn (",
			"\t\t<div></div>",
			"\t);",
			"};",
			"",
			"export default $1;"
		],
		"description": "Return a JSX tag"
	},
	"Import Styled-Components": {
		"scope": "javascript, typescript, javascriptreact",
		"prefix": "imsc",
		"body": [
			"import styled from 'styled-components';"
		],
		"description": "Import Styled-Components"
	},
	"Create styled component": {
		"scope": "javascript, typescript, javascriptreact",
		"prefix": "scc",
		"body": [
			"export const $1 = styled('$2')`",
			"\t$3",
			"`;",
		],
		"description": "Create styled component"
	},

	// TESTING
	"Create a describe function": {
		"scope": "javascript",
		"prefix": "desc",
		"body": [
			"describe('$1', () => {",
			"\t$2",
			"});",
		],
		"description": "Create a describe function"
	},
	"Create a test function": {
		"scope": "javascript",
		"prefix": "test",
		"body": [
			"describe('should $1', () => {",
			"\t$2",
			"});",
		],
		"description": "Create a test function"
	},
	"Create an it function": {
		"scope": "javascript",
		"prefix": "it",
		"body": [
			"it('should $1', () => {",
			"\t$2",
			"});",
		],
		"description": "Create an it function"
	},
}